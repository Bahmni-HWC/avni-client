import ComplicationsBuilder from "../rules/complicationsBuilder";
import C from '../common';




const vulnerabilityDecisions = (programEnrolment, programEncounter) => {

    const vulnerabilitiesDecisionsBuilder = new VulnerabilitiesDecisionsBuilder(programEnrolment, programEncounter);


    let analyseForSchoolDropoutVulnerability = function () {
        vulnerabilitiesDecisionsBuilder.schoolDropoutVulnerabilityReasons.addComplication("No Parents / Single Parent")
            .when.valueInEnrolment("Parents' life status").containsAnyAnswerConceptName("Only Father Alive", "Only Mother Alive", "Both Expired", "Separated");

        vulnerabilitiesDecisionsBuilder.schoolDropoutVulnerabilityReasons.addComplication("Self Addiction")
            .when.valueInEnrolment("Addiction Details").containsAnyAnswerConceptName("Alcohol", "Tobacco");

        vulnerabilitiesDecisionsBuilder.schoolDropoutVulnerabilityReasons.addComplication("Chronic sickness in family")
            .when.valueInEnrolment("Chronic sickness in family").containsAnyAnswerConceptName("Diabetes", "Hypertension", "TB", "Cancer", "Sicklecell Disease", "Other");

        vulnerabilitiesDecisionsBuilder.schoolDropoutVulnerabilityReasons.addComplication("Family Size > 6")
            .when.valueInEnrolment("Number of family members").greaterThan(6);

        if (!programEncounter) return ;

        vulnerabilitiesDecisionsBuilder.schoolDropoutVulnerabilityReasons.addComplication("Menstrual Disorder")
            .when.valueInEncounter("Menstrual disorders").containsAnyAnswerConceptName("Lower Abdominal Pain", "Backache", "Leg Pain", "Nausea and Vomiting",
            "Headache", "Abnormal Vaginal Discharge", "Heavy Bleeding", "Irregular Menses");

        vulnerabilitiesDecisionsBuilder.schoolDropoutVulnerabilityReasons.addComplication("Severe Anemia")
            .when.valueInEncounter("Hb").lessThan(7);


        let bmi = C.calculateBMI(programEncounter.getObservationValue("Weight"), programEncounter.getObservationValue("Height"));
        vulnerabilitiesDecisionsBuilder.schoolDropoutVulnerabilityReasons.addComplication("Malnutrition")
            .whenItem(bmi).lessThan(14.5);

        vulnerabilitiesDecisionsBuilder.schoolDropoutVulnerabilityReasons.addComplication("Sickle Cell Anemia")
            .when.valueInEncounter("Sickling Test Result").containsAnyAnswerConceptName("Trait", "Disease");
    };

    let analyseForAddictionVulnerability = function () {
        vulnerabilitiesDecisionsBuilder.addictionVulnerabilityReasons.addComplication("Parents' Addiction")
            .when.valueInEnrolment("Father's Addiction").containsAnyAnswerConceptName("Alcohol", "Tobacco")
            .and.valueInEnrolment("Mother's Addiction").containsAnyAnswerConceptName("Alcohol", "Tobacco");

        if (!programEncounter) return ;

        vulnerabilitiesDecisionsBuilder.addictionVulnerabilityReasons.addComplication("Friends Addiction")
            .when.valueInEncounter("Are friends addicted?").containsAnyAnswerConceptName("Yes");

        vulnerabilitiesDecisionsBuilder.addictionVulnerabilityReasons.addComplication("Self Addiction")
            .when.valueInEncounter("Addiction Details").containsAnyAnswerConceptName("Alcohol", "Tobacco", "Both");
    };

    let analyseForEarlyMarriageVulnerability = function () {
        if (!programEncounter) return ;

        vulnerabilitiesDecisionsBuilder.earlyMarriageVulnerabilityReasons.addComplication("School dropped out")
            .when.valueInEncounter("School going").containsAnyAnswerConceptName("Dropped Out");
    };

    let analyseForEarlyPregnancyVulnerability = function () {
        if (!programEncounter) return ;
        vulnerabilitiesDecisionsBuilder.earlyPregnancyVulnerabilityReasons.addComplication("Sexual Activity")
            .when.female.and.valueInEncounter("Sexually active").containsAnyAnswerConceptName("Yes");
    };

    function analyseForRoadTrafficAccidentVulnerability() {
        if (!programEncounter) return ;
        vulnerabilitiesDecisionsBuilder.roadTrafficAccidentVulnerabilityReasons.addComplication("Driving Vehicle")
            .when.valueInEncounter("Drives 2 wheeler").containsAnyAnswerConceptName("Yes");
    }


    analyseForSchoolDropoutVulnerability();
    analyseForAddictionVulnerability();
    analyseForEarlyMarriageVulnerability();
    analyseForEarlyPregnancyVulnerability();
    analyseForRoadTrafficAccidentVulnerability();

    return {enrolmentDecisions: vulnerabilitiesDecisionsBuilder.decisions(), encounterDecisions: vulnerabilitiesDecisionsBuilder.decisions(), registrationDecisions: []};
};

class VulnerabilitiesDecisionsBuilder {

    constructor(programEnrolment, programEncounter) {
        this.vulnerabilities = VulnerabilitiesDecisionsBuilder.builderFor(programEnrolment, programEncounter, 'Adolescent Vulnerabilities');
        this.schoolDropoutVulnerabilityReasons = VulnerabilitiesDecisionsBuilder.builderFor(programEnrolment, programEncounter, 'Reason for School Dropout Vulnerability');
        this.addictionVulnerabilityReasons = VulnerabilitiesDecisionsBuilder.builderFor(programEnrolment, programEncounter, 'Reason for Addiction Vulnerability');
        this.earlyMarriageVulnerabilityReasons = VulnerabilitiesDecisionsBuilder.builderFor(programEnrolment, programEncounter, 'Reason for Early Marriage Vulnerability');
        this.earlyPregnancyVulnerabilityReasons = VulnerabilitiesDecisionsBuilder.builderFor(programEnrolment, programEncounter, 'Reason for Early Pregnancy & RTI Vulnerability');
        this.roadTrafficAccidentVulnerabilityReasons = VulnerabilitiesDecisionsBuilder.builderFor(programEnrolment, programEncounter, 'Reason for Road Traffic Accident Vulnerability');
    }

    static builderFor(programEnrolment, programEncounter, complicationsConcept) {
        return new ComplicationsBuilder({
            programEnrolment: programEnrolment,
            programEncounter: programEncounter,
            complicationsConcept: complicationsConcept
        });
    }

    reasonsFor(vulnerability) {
        switch (vulnerability) {
            case 'School dropout':
                return this.schoolDropoutVulnerabilityReasons;
            case 'Addiction':
                return this.addictionVulnerabilityReasons;
            case 'Early Marriage':
                return this.earlyMarriageVulnerabilityReasons;
            case 'Early Pregnancy & RTI':
                return this.earlyPregnancyVulnerabilityReasons;
            case 'Road Traffic Accident':
                return this.roadTrafficAccidentVulnerabilityReasons;
        }
    }

    decisions() {
        let decisions = [];

        this.addVulnerabilitiesBasedOnReasons();

        if (!this.vulnerabilities.hasComplications()) return decisions;

        decisions.push(this.vulnerabilities.getComplications());

        this.addDecisionsForReasons(decisions);

        return decisions;
    }

    addDecisionsForReasons(decisions) {
        if (this.schoolDropoutVulnerabilityReasons.hasComplications())
            decisions.push(this.schoolDropoutVulnerabilityReasons.getComplications());
        if (this.addictionVulnerabilityReasons.hasComplications())
            decisions.push(this.addictionVulnerabilityReasons.getComplications());
        if (this.earlyMarriageVulnerabilityReasons.hasComplications())
            decisions.push(this.earlyMarriageVulnerabilityReasons.getComplications());
        if (this.earlyPregnancyVulnerabilityReasons.hasComplications())
            decisions.push(this.earlyPregnancyVulnerabilityReasons.getComplications());
        if (this.roadTrafficAccidentVulnerabilityReasons.hasComplications())
            decisions.push(this.roadTrafficAccidentVulnerabilityReasons.getComplications());
    }

    addVulnerabilitiesBasedOnReasons() {
        if (this.schoolDropoutVulnerabilityReasons.hasComplications())
            this.vulnerabilities.addComplication("School dropout");
        if (this.addictionVulnerabilityReasons.hasComplications())
            this.vulnerabilities.addComplication("Addiction");
        if (this.earlyMarriageVulnerabilityReasons.hasComplications())
            this.vulnerabilities.addComplication("Early Marriage");
        if (this.earlyPregnancyVulnerabilityReasons.hasComplications())
            this.vulnerabilities.addComplication("Early Pregnancy & RTI");
        if (this.roadTrafficAccidentVulnerabilityReasons.hasComplications())
            this.vulnerabilities.addComplication("Road Traffic Accident");
    }
}


export default vulnerabilityDecisions