version: 2.1
parameters:
  flavor:
    type: enum
    default: "generic"
    enum: ["generic", "lfe", "sakhi", "lfeTeachNagaland"]
    description: Flavor of the binary to generate. Must be one of "generic", "lfe" or "sakhi"
  versionCode:
    type: string
    default: "1"
    description: Version code for the binary for internal use on the play store. Is of the format 33702.
  versionName:
    type: string
    default: "1.0.0"
    description: Version name for the binary for external display on the play store. Is of the format 3.37.2.
jobs:
  install_deps:
    docker:
      - image: cimg/node:16.18.0
    working_directory: ~/avni-client
    steps:
      - checkout
      #      - restore_cache:
      #          keys:
      #          - v1-dependencies-{{ checksum "package.json" }}
      #          - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      #          - v1-dependencies-
      - run: sudo apt-get install make
      - run: make deps_ci
#      - save_cache:
#          paths:
#            - node_modules
#          key: v1-dependencies-{{ checksum "package.json" }}
      - save_cache:
          paths:
            - packages/openchs-android/node_modules
          key: v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}

  test_android:
    docker:
      - image: cimg/node:16.18.0
    working_directory: ~/avni-client
    steps:
      - checkout
      - restore_cache:
          keys:
#            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
            - v1-dependencies-
      - run: sudo apt-get install make
      - run: make deps_ci
      - run: make ci test-android

  release_android_staging:
    docker:
      - image: cimg/android:2022.12-node
    working_directory: ~/avni-client
    resource_class: large
    environment:
      flavor: << pipeline.parameters.flavor >>
    steps:
      - checkout
      - run: echo "Building flavor << pipeline.parameters.flavor >>"
      - restore_cache:
          keys:
#            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-staging
            - v1-dependencies-
#      - run: sudo apt --only-upgrade install software-properties-common
#      - run: sudo apt-add-repository 'deb http://security.debian.org/debian-security stretch/updates main'
#      - run: sudo apt update
#      - run: sudo apt install openjdk-11-jdk make
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      - run: sudo npm i -g react-native-cli
      - run: make deps_ci release_staging_without_clean
      - run: make deploy_platform_translations_staging
      - save_cache:
          key: v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-staging
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          destination: << pipeline.parameters.flavor >>-staging-<< pipeline.git.revision >>.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemaps/react/<< pipeline.parameters.flavor >>Release/index.android.bundle.map
          destination: sourcemap-<< pipeline.parameters.flavor >>-staging-<< pipeline.git.revision >>.map

  release_android_prerelease:
    docker:
      - image: cimg/android:2022.12-node
    working_directory: ~/avni-client
    resource_class: large
    environment:
      flavor: << pipeline.parameters.flavor >>
    steps:
      - checkout
      - run: echo "Building flavor << pipeline.parameters.flavor >>"
      - restore_cache:
          keys:
            #            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-prerelease
            - v1-dependencies-
      #      - run: sudo apt --only-upgrade install software-properties-common
      #      - run: sudo apt-add-repository 'deb http://security.debian.org/debian-security stretch/updates main'
      #      - run: sudo apt update
      #      - run: sudo apt install openjdk-11-jdk make
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      - run: sudo npm i -g react-native-cli
      - run: make deps_ci release_prerelease_without_clean
      - run: make deploy_platform_translations_prerelease
      - save_cache:
          key: v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-prerelease
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          destination: << pipeline.parameters.flavor >>-prerelease-<< pipeline.git.revision >>.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemaps/react/<< pipeline.parameters.flavor >>Release/index.android.bundle.map
          destination: sourcemap-<< pipeline.parameters.flavor >>-prerelease-<< pipeline.git.revision >>.map

  release_android_perf:
    docker:
      - image: cimg/android:2022.12-node
    working_directory: ~/avni-client
    resource_class: large
    environment:
      flavor: << pipeline.parameters.flavor >>
    steps:
      - checkout
      - run: echo "Building flavor << pipeline.parameters.flavor >>"
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-perf
            - v1-dependencies-
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      - run: sudo npm i -g react-native-cli
      - run: make deps_ci release_perf_without_clean
      - run: make deploy_platform_translations_prerelease
      - save_cache:
          key: v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-perf
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
          destination: << pipeline.parameters.flavor >>-perf-<< pipeline.git.revision >>.apk
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemaps/react/<< pipeline.parameters.flavor >>Release/index.android.bundle.map
          destination: sourcemap-<< pipeline.parameters.flavor >>-perf-<< pipeline.git.revision >>.map

  release_android_live:
    parameters:
      keystore_password:
        type: string
        default: $KEYSTORE_PASSWORD
      key_password:
        type: string
        default: $KEY_PASSWORD
    docker:
      - image: cimg/android:2022.12-node
    working_directory: ~/avni-client
    resource_class: large
    environment:
      flavor: << pipeline.parameters.flavor >>
      versionCode: << pipeline.parameters.versionCode >>
      versionName: << pipeline.parameters.versionName >>
    steps:
      - checkout
      - run: echo "Building flavor << pipeline.parameters.flavor >>"
      - run: echo "Building versionCode << pipeline.parameters.versionCode >>; versionName << pipeline.parameters.versionName >>"
      - restore_cache:
          keys:
#            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "packages/openchs-android/package.json" }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-live
            - v1-dependencies-
#      - run: sudo apt update
#      - run: sudo apt install openjdk-11-jdk make
      - run: sudo chmod a+x packages/openchs-android/android/gradlew
      - run: sudo npm i -g react-native-cli
      - run: make deps_ci
#      - run: versionName=<< pipeline.parameters.versionName >> versionCode=<< pipeline.parameters.versionCode >> make release_prod_without_clean
#      - store_artifacts:
#          path: packages/openchs-android/android/app/build/outputs/apk/<< pipeline.parameters.flavor >>/release/app-<< pipeline.parameters.flavor >>-release.apk
#          destination: << pipeline.parameters.flavor >>-live-<< pipeline.parameters.versionName >>-<< pipeline.git.revision >>.apk
      - run: versionName=<< pipeline.parameters.versionName >> versionCode=<< pipeline.parameters.versionCode >> make bundle_release_prod_without_clean
      - save_cache:
          key: v1-dependencies-{{ checksum "packages/openchs-android/android/app/build.gradle" }}-live
          paths:
            - ~/.gradle
            - ~/.m2
            - ~/avni-client/packages/openchs-android/android/app/.gradle
            - ~/avni-client/packages/openchs-android/android/.gradle
      - store_artifacts:
          path: packages/openchs-android/android/app/build/outputs/bundle/<< pipeline.parameters.flavor >>Release/app-<< pipeline.parameters.flavor >>-release.aab
          destination: << pipeline.parameters.flavor >>-live-<< pipeline.parameters.versionName >>-<< pipeline.git.revision >>.aab
      - store_artifacts:
          path: packages/openchs-android/android/app/build/generated/sourcemaps/react/<< pipeline.parameters.flavor >>Release/index.android.bundle.map
          destination: sourcemap-<< pipeline.parameters.flavor >>-live-<< pipeline.parameters.versionName >>-<< pipeline.git.revision >>.map
      - run: curl -L https://github.com/google/bundletool/releases/download/1.15.1/bundletool-all-1.15.1.jar > ./bundletool.jar
      - run: java -jar ./bundletool.jar build-apks --bundle=packages/openchs-android/android/app/build/outputs/bundle/<< pipeline.parameters.flavor >>Release/app-<< pipeline.parameters.flavor >>-release.aab --output=avniuniversal.apks --mode=universal --ks=packages/openchs-android/android/app/openchs-release-key.keystore --ks-pass=pass:<< parameters.keystore_password >> --ks-key-alias=openchs-release-key --key-pass=pass:<< parameters.key_password >>
      - store_artifacts:
          path: avniuniversal.apks
          destination: << pipeline.parameters.flavor >>-live-<< pipeline.parameters.versionName >>-<< pipeline.git.revision >>-apk.zip
workflows:
  version: 2
  test_all:
    jobs:
      - install_deps
      - test_android:
          requires:
            - install_deps
#      - hold_staging:
#          type: approval
#          requires:
#            - test_android
      - hold_prerelease:
          type: approval
          requires:
            - test_android
      - hold_perf:
          type: approval
          requires:
            - test_android
      - hold_live:
          type: approval
          requires:
            - test_android
      - release_android_staging:
          filters:
            branches:
              ignore:
                - /^dependabot.*/
          requires:
#            - hold_staging
            - test_android
      - release_android_prerelease:
          requires:
            - hold_prerelease
      - release_android_perf:
          requires:
            - hold_perf
      - release_android_live:
          requires:
            - hold_live

notify:
  webhooks:
    - url: https://webhooks.gitter.im/e/0fdffde721194986f2a0
